예전 서울대학교 통계연구소에서 들었던 R 기초 공개강좌에서 트위터에 접속하여

API를 받아서, 관련 데이터를 다운로드 받아서 분석하는 방법이 강의 내용에 있었는데,

다른 일정과 겹쳐서 강의도 못듣고, 실습도 못했는데,

아무래도 뭔가 진짜로 살아 있는 데이터를 가지고 분석한다는 느낌이 들 것 같아서,

제가 하는 강의에도 한번 넣어 볼려고, 그 때 받았던 강의노트를 가지고,

따라 해볼려고 했습니다.

언제나 그렇듯이 분명히 강의노트에는 누구나 할 수 있을 것 같이 쉬웠는데,

실제 제가 하니, 안되더군요.

일단, 트위터에서 API Key를 받는 것이 안되더군요. 무슨 한도가 다차서 안된다는

메시지가 계속 나와서, 몇시간을 고생하다가,

에라 모르겠다. 데이터 무제한인 핸드폰으로 접속하면 혹시 될지도 모른다는

생각에 핸드폰으로 트위터에 접속하니, 겨우 App이 생성 되었습니다.

이유는 모르겠으나, 트위터가 국내 협력사업자로 LG U+를 정해서 그런지,

모바일 인증 메시지도 안오고, 정말 이유를 알 수 없게 안되던데,

역시 이유를 모르겠으나, API Key를 겨우 받았습니다.

겨우, 접속을 해서 교재에 나오는 대로 따라해 보니 다 잘되더군요.

그런데 또 문제가 생겨서 트위터 데이터를 검색하지를 못하더군요.

“아, 정말… 선생님이 안되는 것을 가르켜 줄리는 없는데…”하면서

또 몇시간 Googling을 해보니 강의를 들었던 것이 1월말인데, 2월 중순쯤에

R에서 트위터 데이터 검색 및 다운로드를 할 수 있게 해주는

twitteR 패키지의 원저작자가 Authentication방법을 바꿨다고 하더군요.

“뭐, 이정도는 Open Source 사용자로서 해결할 수  있어야 한다”고 생각하고

있던 바, 겨우 방법을 찾아서 실행을 했습니다.

그래서 제가 하는 국민대 강의에서 학생들에게 “행렬”과 “배열”,

“리스트”와 “데이터프레임”의 차이를 실감나게 강의하기 위해서

JPG 포맷 등의 그림파일을 다룰 수 있게 해주는 raster라는 패키지와

트위터 데이터를 다루는 twitteR 패키지를 가르켜 주고 실습을 할려고

하는데, 이번에는 강의 전날밤에 분명히 확인했던, raster라는 패키지가

install이 안되더군요. “아,,, 정말 미치겠네….”

“혹시 되신 분들 있으세요?” 하니 패키지 설치가 되는 분들이 약 40% 정도,

안되는 분들도 그 정도 였다.

귀중한 강의시간을 이렇게 보내면 안되는데… 하는 순간에

한 학생이 원인을 찾아내었다. R의 패키지를 전세계에서

편하게 사용할려면 각 나라마다 CRAN(Comprehensive R Archive Network)을

Mirroring 해놓은 사이트에 접속하여 패키지를 다운로드 받는데,

국내에 있던 이 Mirroring 사이트 3곳 중에 한곳이 제대로 유지보수가 되지 않아서,

이 2번 Mirroring 서버를 선택해 두었던 분들에게서 문제가 발생되었던 것이었습니다.

애고애고, 말도 많고 탈도 많더군요.

이래서 저희 Class학생들은 아주 귀중한 경험을 하게되었지요.

이런 이유로 안되는 경우도 있구나…

하지만 이런 역경을 거쳐, 천신만고 끝에 그림을 가지고 직접 조작하면서

JPG 파일을 읽어들이고, 그 그림의 일부를 지우거나 색깔을 바꿔보는 실습을 하고,

또 실제로 지워지는 것을 눈으로 확인하니, 저도 그렇고,

아마도 학생들도 R로 할 수 있는 다양한 것들에 대해서 약간의 감을 잡는데

도움이 되었으리라 생각합니다.

Open Source의 장점과 단점을 온탕과 냉탕을 왔다리 갔다리 하듯이

체험할 수 있는 좋은 기회가 되었으리라 생각합니다.

오랜만에 글을 써서 그런지 기분이 좋네요.

관련된 코드를 올려드리니, 관심있는 분들은 한번 따라해 보시는 것도

좋지 않을까 합니다.


install.packages("raster", dependencies=T)
 
library(raster)
 
mtrushRGB <- brick("b_mount-rushmore-national-memorial.jpg")
 
eraseXy <- function(imageData, x, y, ncol, nrow) {
  xrange <- x:(x+ncol)
  yrange <- y:(y+nrow)
  imageData[yrange,xrange][,1] <- 255
  imageData[yrange,xrange][,2] <- 255
  imageData[yrange,xrange][,3] <- 255
  return(imageData)
}
 
dim(mtrushRGB)
imgErase1 <- eraseXy(mtrushRGB, 500, 600, 300, 300)
plotRGB(imgErase1)
 
eraseXy2 <- function(imageData, x, y, ncol=500, nrow=500) {
  xrange <- x:(x+ncol)
  yrange <- y:(y+nrow)
  imageData[yrange,xrange][,1] <- 255
  imageData[yrange,xrange][,2] <- 255
  imageData[yrange,xrange][,3] <- 255
  return(imageData)
}
 
imgErase4 <- eraseXy2(mtrushRGB, 800, 500)
plotRGB(imgErase4)
 
imgErase5 <- eraseXy2(mtrushRGB, 800, 500, 200, 200)
plotRGB(imgErase5)
 


 